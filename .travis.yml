# see http://about.travis-ci.org/docs/user/languages/php/ for more hints
language: php

# list any PHP version you want to test against
php:
  # using major version aliases

  # aliased to a recent 5.3.x version
  - 5.3
  # aliased to a recent 5.4.x version
  #- 5.4
#services:
#  - mongodb
#  - redis-server # --port 7777

## optionally specify a list of environments, for example to test different RDBMS
#env:
#   - DB=mongo
#   #- DB=mysql

# now, all services will be started and env will be set
## execute any number of scripts before the test run, custom env's are available as variables
# Clone project repository from GitHub
# cd to clone directory
# Checkout commit for this build
# and than go to steps
# step 1
before_install:
   - export TEST_DIR=$PWD
   - export BASE_DIR=`dirname $PWD`
   - export LIB_DIR=$BASE_DIR/lib
   - export MONGODB_DIR=$BASE_DIR/mongodb
   - export REDIS_DIR=$BASE_DIR/redis
   - mkdir -p $LIB_DIR
   - mkdir -p $MONGODB_DIR
   - mkdir -p $REDIS_DIR

# step 2
install:
   #- echo "install"
   - export YII_DOWNLOAD='yii-1.1.13.e9e4a0'
   - wget "https://yii.googlecode.com/files/${YII_DOWNLOAD}.zip" -O $BASE_DIR/${YII_DOWNLOAD}.zip
   - unzip $BASE_DIR/${YII_DOWNLOAD}.zip -d $BASE_DIR
   - cp -rf $BASE_DIR/${YII_DOWNLOAD}/framework $LIB_DIR/yii-1.1.13

# step 3
before_script:
   - mongod --port 8888 --dbpath $MONGODB_DIR &
   - sleep 3
   - redis-server --port 9999 &
   - sleep 1
   - pstree
   - git clone https://github.com/PGWireless/phplib
   - ls -l $BASE_DIR
#  - if [[ "$DB" == "pgsql" ]]; then psql -c "DROP DATABASE IF EXISTS hello_world_test;" -U postgres; fi
#  - if [[ "$DB" == "pgsql" ]]; then psql -c "create database hello_world_test;" -U postgres; fi
#  - if [[ "$DB" == "mysql" ]]; then mysql -e "create database IF NOT EXISTS hello_world_test;" -uroot; fi

## omitting "script:" will default to phpunit
## use the $DB env variable to determine the phpunit.xml to use
#script: phpunit --configuration phpunit_$DB.xml --coverage-text
# step 4
script: 
  - cd $TEST_DIR
  - phpunit --coverage-text test/

# step 5
finish:
  - echo "finish"

# step 6 on success
after_success:
  - echo "after_success"
  - ls -l

# step 6 on failure
after_failure:
  - echo "after_failure"

# step 7
after_script:
  - echo "after_script"
  - pstree
  - pwd
  - cat /home/travis/state.log
  - ls -l
## configure notifications (email, IRC, campfire etc)
#notifications:
#  irc: "irc.freenode.org#travis"
